package com.test.multiblock;

import com.test.inventory.FilterInventory;
import com.test.multiblock.construct.tileentity.ConstructFilterUserTileEntity;

import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.inventory.IInventory;
import net.minecraft.item.ItemStack;
import net.minecraft.nbt.NBTTagCompound;
import net.minecraft.nbt.NBTTagList;
import net.minecraft.network.NetworkManager;
import net.minecraft.network.Packet;
import net.minecraft.network.play.server.S35PacketUpdateTileEntity;
import net.minecraft.tileentity.TileEntity;
import net.minecraftforge.common.util.Constants;
import net.minecraftforge.common.util.ForgeDirection;

public class BlockDesignTableTileEntity extends TileEntity {

	public ItemStack recipe;

	public BlockDesignTableTileEntity() {

	}

	///////////////////////////////////////////////////////////////////////////////////////////////////

	@Override
	public void markDirty() {
		worldObj.markBlockForUpdate(xCoord, yCoord, zCoord);
	}

	@Override
	public final Packet getDescriptionPacket() {
		System.out.println(this.getClass().getSimpleName());
		NBTTagCompound nbtTagCompound = new NBTTagCompound();
		this.writeToNBT(nbtTagCompound);
		return new S35PacketUpdateTileEntity(this.xCoord, this.yCoord, this.zCoord, 1, nbtTagCompound);
	}

	@Override
	public final void onDataPacket(NetworkManager net, S35PacketUpdateTileEntity pkt) {
		super.onDataPacket(net, pkt);
		NBTTagCompound nbtTagCompound = pkt.func_148857_g();
		this.readFromNBT(nbtTagCompound);
	}

	public void readFromNBT(NBTTagCompound tag) {
		super.readFromNBT(tag);
		NBTTagCompound itemTagCompound = (NBTTagCompound) tag.getCompoundTag("recipe");
		this.recipe = ItemStack.loadItemStackFromNBT(itemTagCompound);
	}

	public void writeToNBT(NBTTagCompound tag) {
		super.writeToNBT(tag);
		NBTTagCompound itemTagCompound;
		if(recipe != null){
			itemTagCompound = new NBTTagCompound();
			this.recipe.writeToNBT(itemTagCompound);
		}
		tag.setTag("recipe", itemTagCompound);
	}

}
