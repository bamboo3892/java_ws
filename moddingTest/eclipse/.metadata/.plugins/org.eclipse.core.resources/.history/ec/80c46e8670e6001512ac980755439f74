package com.test.main;

import static com.test.main.TestCore.*;

import java.io.File;

import com.test.block.TestBlock;
import com.test.block.TileTestBlock;
import com.test.block.construct.block.ConstructFurnace;
import com.test.block.construct.block.ConstructInterface;
import com.test.block.construct.block.ConstructStorage;
import com.test.block.construct.parts.FurnacePart;
import com.test.block.construct.parts.InterfacePart;
import com.test.block.construct.parts.StoragePart;
import com.test.block.construct.tileentity.ConstructFurnaceTileEntity;
import com.test.block.construct.tileentity.ConstructInterfaceTileEntity;
import com.test.block.construct.tileentity.ConstructStorageTileEntity;
import com.test.item.ItemWrench;
import com.test.item.SightStealer;
import com.test.item.TestItem;
import com.test.item.itemBlock.ItemMultiBlock;
import com.test.multiblock.BlockConstructFrame;
import com.test.multiblock.BlockFrameLine;
import com.test.multiblock.BlockFrameTileEntity;
import com.test.multiblock.BlockPipe;
import com.test.multiblock.BlockPipeTileEntity;
import com.test.multiblock.MultiBlock;
import com.test.multiblock.MultiBlockTileEntity;
import com.test.register.ConstructPartRegistry;
import com.test.tileentity.TileTestBlockTileEntity;

import cpw.mods.fml.common.FMLLog;
import cpw.mods.fml.common.registry.GameRegistry;
import net.minecraft.init.Blocks;
import net.minecraft.init.Items;
import net.minecraft.item.ItemStack;
import net.minecraftforge.common.config.Configuration;

public class CommonProxy {

	public void loadConfiguration(File file){
		Configuration config = new Configuration(file);
		try{
			config.load();
			isHoge = config.get("GENERAL", "isHOGE", false).getBoolean(false);
		}catch(Exception e){
			FMLLog.severe("Error Message");
		}finally{
			config.save();
		}
	}

	public void registerBlock(){
		testBlock = new TestBlock();
		GameRegistry.registerBlock(testBlock, "testBlock");
		tileTestBlock = new TileTestBlock();
		GameRegistry.registerBlock(tileTestBlock, "tileTestBlock");
		pipe = new BlockPipe();
		GameRegistry.registerBlock(pipe, "pipe");
		constructFurnace = new ConstructFurnace();
		GameRegistry.registerBlock(constructFurnace, "furnace");
		constructStorage = new ConstructStorage();
		GameRegistry.registerBlock(constructStorage, "storage");
		constructInterface = new ConstructInterface();
		GameRegistry.registerBlock(constructInterface, "interface");
		blockFrame = new BlockConstructFrame();
		GameRegistry.registerBlock(blockFrame, "blockFrame");
		blockFrameLine = new BlockFrameLine();
		GameRegistry.registerBlock(blockFrameLine, "blockFrameLine");
		multiBlock = new MultiBlock();
		GameRegistry.registerBlock(multiBlock, ItemMultiBlock.class, "multiBlock");
		//GameRegistry.registerCustomItemStack(string, itemStack);
	}

	public void registerItem(){
		testItem = new TestItem();
		GameRegistry.registerItem(testItem, "testItem");
		sightStealer = new SightStealer();
		GameRegistry.registerItem(sightStealer, "sightStealer");
		wrench = new ItemWrench();
		GameRegistry.registerItem(wrench, "wrench");
		itemMultiBlock = new ItemMultiBlock(multiBlock);
	}

	public void registerTileEntity(){
		GameRegistry.registerTileEntity(TileTestBlockTileEntity.class, "tileTestBlockTileEntity");
		GameRegistry.registerTileEntity(BlockPipeTileEntity.class, "blockPipeTileEntity");
		GameRegistry.registerTileEntity(BlockFrameTileEntity.class, "blockFrameTileEntity");
		GameRegistry.registerTileEntity(MultiBlockTileEntity.class, "multiBlockTileEntity");
		//construct parts
		GameRegistry.registerTileEntity(ConstructFurnaceTileEntity.class, "constructFurnaceTileEntity");
		ConstructPartRegistry.registerConstructPart(new FurnacePart());
		GameRegistry.registerTileEntity(ConstructStorageTileEntity.class, "constructStorageTileEntity");
		ConstructPartRegistry.registerConstructPart(new StoragePart());
		GameRegistry.registerTileEntity(ConstructInterfaceTileEntity.class, "constructInterfaceTileEntity");
		ConstructPartRegistry.registerConstructPart(new InterfacePart());
	}

	public void registerKeyBinding(){

	}

	public void registerRecipes(){
		//crafting
		GameRegistry.addRecipe(
				new ItemStack(Items.diamond, 3),
					new Object[]
					{
						" X ",
						" X ",
						" X ",
						'X', Blocks.dirt
					});
		GameRegistry.addShapelessRecipe(
				new ItemStack(Items.diamond),
					new Object[]
					{
						Blocks.dirt, Blocks.stone
					});

		//smelting
		GameRegistry.addSmelting(testBlock, new ItemStack(Blocks.wool, 1, 0), 0.5F);
	}

	public void registerRenderer(){

	}

}










