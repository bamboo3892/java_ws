package com.test.network;

import com.test.main.TestCore;
import com.test.tileentity.ISimpleTilePacketUser;

import cpw.mods.fml.common.network.simpleimpl.IMessage;
import cpw.mods.fml.common.network.simpleimpl.IMessageHandler;
import cpw.mods.fml.common.network.simpleimpl.MessageContext;
import io.netty.buffer.ByteBuf;
import net.minecraft.client.Minecraft;

public class SimpleTilePacket implements IMessage {

	public static final byte SLIDER_INPUT = 1;
	public static final byte EFFECT = 2;
	public static final byte FILTER = 3;

	public int x;
	public int y;
	public int z;
	public byte command;
	public int value;

	public SimpleTilePacket() {}

	public SimpleTilePacket(int x, int y, int z, byte command, int value) {
		this.x = x;
		this.y = y;
		this.z = z;
		this.command = command;
		this.value = value;
	}

	@Override
	public void fromBytes(ByteBuf buf) {
		x = buf.readInt();
		y = buf.readInt();
		z = buf.readInt();
		command = buf.readByte();
		value = buf.readInt();

		/*
		x = ByteBufUtils.readVarInt(buf, 5);
		y = ByteBufUtils.readVarInt(buf, 5);
		z = ByteBufUtils.readVarInt(buf, 5);
		value = ByteBufUtils.readVarInt(buf, 5);
		*/
	}

	@Override
	public void toBytes(ByteBuf buf) {
		buf.writeInt(x);
		buf.writeInt(y);
		buf.writeInt(z);
		buf.writeByte(command);
		buf.writeInt(value);
	}

	@Override
	public String toString() {
		return String.format("Simple Tile Packet : x, y, z = %s, %s, %s : command = %s : value = %s", x, y, z, command, value);
	}

	/**server only*/
	public static class SimpleTilePacketHandler implements IMessageHandler<SimpleTilePacket, IMessage> {

		@Override
		public IMessage onMessage(SimpleTilePacket msg, MessageContext ctx) {
			//System.out.println(String.format("Received %s from %s", msg, ctx.getServerHandler().playerEntity.getDisplayName()));

			if(ctx.getServerHandler().playerEntity.worldObj.getTileEntity(msg.x, msg.y, msg.z) instanceof ISimpleTilePacketUser){
				ISimpleTilePacketUser tile = (ISimpleTilePacketUser) ctx.getServerHandler().playerEntity.worldObj.getTileEntity(msg.x, msg.y, msg.z);
				tile.dealCommand(msg.command, msg.value);
				TestCore.packetDispatcher.sendToDimension(msg, ctx.getServerHandler().playerEntity.dimension);
			}

			return null;
		}

	}

	/**client only*/
	public static class SimpleTileReplyPacketHandler implements IMessageHandler<SimpleTilePacket, IMessage> {

		@Override
		public IMessage onMessage(SimpleTilePacket msg, MessageContext ctx) {
			//System.out.println(String.format("Received %s from %s", msg, ctx.side.SERVER));

			if(Minecraft.getMinecraft().theWorld.getTileEntity(msg.x, msg.y, msg.z) instanceof ISimpleTilePacketUser){
				ISimpleTilePacketUser tile = (ISimpleTilePacketUser) Minecraft.getMinecraft().theWorld.getTileEntity(msg.x, msg.y, msg.z);
				tile.dealCommand(msg.command, msg.value);
			}

			return null;
		}

	}

	/*for 1.8
	@Override
	public IMessage onMessage(PacketClockPulser message, MessageContext ctx) {
	    IThreadListener mainThread = (WorldServer) ctx.getServerHandler().playerEntity.worldObj; // or Minecraft.getMinecraft() on the client
	    mainThread.addScheduledTask(new Runnable() {
	        @Override
	        public void run() {
	            System.out.println(String.format("Received %s from %s", message.text, ctx.getServerHandler().playerEntity.getDisplayName()));
	        }
	    });
	    return null; // no response in this case
	}
	*/

}
