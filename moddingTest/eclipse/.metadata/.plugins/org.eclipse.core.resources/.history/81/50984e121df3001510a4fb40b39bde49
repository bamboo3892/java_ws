package com.test.client.gui;

import org.lwjgl.opengl.GL11;

import com.test.inventory.FilterInventory;
import com.test.main.TestCore;
import com.test.multiblock.construct.tileentity.ConstructFilterUserTileEntity;
import com.test.network.SimpleTilePacket;
import com.test.server.gui.ConstructFilterContainer;
import com.test.utils.Position;

import net.minecraft.client.gui.GuiButton;
import net.minecraft.client.gui.inventory.GuiContainer;
import net.minecraft.inventory.IInventory;
import net.minecraft.util.ResourceLocation;
import net.minecraft.util.StatCollector;

public class ConstructFilterGui extends GuiContainer {

	private final static ResourceLocation GUI_BACKGROUND = new ResourceLocation(TestCore.MODID+":textures/gui/container/filter.png");
	private IInventory player;
	private ConstructFilterUserTileEntity tile;
	private FilterInventory filter;
	private int side;

	public ConstructFilterGui(IInventory player, ConstructFilterUserTileEntity tile, int side) {
		super(new ConstructFilterContainer(player,  tile.filter[side]));
		this.player = player;
		this.tile = tile;
		this.filter = tile.filter[side];
		this.side = side;
		this.xSize = 176;
		this.ySize = 166;
	}

	private static final ResourceLocation beaconGuiTextures = new ResourceLocation("textures/gui/container/beacon.png");

	@Override
	public void initGui() {
		super.initGui();
		int i = width - xSize >> 1;
		int j = height - ySize >> 1;

		buttonList.add(new GuiTextureButton(0, i + 120, j + 20, beaconGuiTextures, 90, 220));
		buttonList.add(new GuiTextureButton(1, i + 120, j + 20, beaconGuiTextures, 90, 220));
		buttonList.add(new GuiTextureButton(2, i + 120, j + 20, beaconGuiTextures, 90, 220));
		buttonList.add(new GuiTextureButton(3, i + 120, j + 20, beaconGuiTextures, 90, 220));
	}

	@Override
	protected void drawGuiContainerForegroundLayer(int xMouse, int yMouse) {
		this.fontRendererObj.drawString(StatCollector.translateToLocal(this.filter.getInventoryName()), 8, 6, 0x404040);
		this.fontRendererObj.drawString(StatCollector.translateToLocal("container.filter"), 8, this.ySize - 96 + 2, 0x404040);
	}

	@Override
	protected void drawGuiContainerBackgroundLayer(float partialRenderTick, int xMouse, int yMouse) {
		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
		this.mc.getTextureManager().bindTexture(GUI_BACKGROUND);
		int x = (this.width - this.xSize) / 2;
		int y = (this.height - this.ySize) / 2;
		this.drawTexturedModalRect(x, y, 0, 0, this.xSize, this.ySize);
	}

	@Override
	public void onGuiClosed() {
		Position p = tile.getPosition();
		TestCore.packetDispatcher.sendToServer(new SimpleTilePacket(p.x, p.y, p.z, SimpleTilePacket.FILTER, 0));
		super.onGuiClosed();
	}

	@Override
	protected void keyTyped(char p_73869_1_, int key) {
		if(key == 1 || key == this.mc.gameSettings.keyBindInventory.getKeyCode()){
			this.mc.thePlayer.closeScreen();
		}
	}

}
